% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/l2.R
\name{fanc_read_l2dp}
\alias{fanc_read_l2dp}
\alias{fanc_read_l2skel}
\title{Read L2 skeleton or dotprops for FANC neurons using fafbseg-py}
\usage{
fanc_read_l2dp(id, OmitFailures = TRUE, dataset = NULL, ...)

fanc_read_l2skel(id, OmitFailures = TRUE, dataset = NULL, ...)
}
\arguments{
\item{id}{One or more flywire ids}

\item{OmitFailures}{Whether or not to drop neurons that cannot be read from
the results (rather than erroring out). Default \code{TRUE}.}

\item{dataset}{An optional CAVE dataset name (expert use only, by default
will choose the standard FANC dataset).}

\item{...}{Additional arguments passed to the
\code{fafbseg.flywire.l2_skeleton} or
\code{fafbseg.flywire.l2_dotprops}functions.}
}
\value{
a \code{\link{neuronlist}} containing one or more
\code{\link{neuron}} or \code{\link{dotprops}} objects. Note that neurons
will be calibrated in nm while dotprops will be calibrated in microns.
}
\description{
\code{fanc_read_l2skel} reads one or more neurons as simplified
L2 skeletons.

\code{fanc_read_l2dp} reads one or more neurons as simplified
dotprops format. See \code{\link[fafbseg]{read_l2skel}}.
}
\details{
\code{fanc_read_l2dp} uses a special data structure for rapid
download of the dotprops version of neurons required for NBLASTing. It
leverages the python navis / fafbseg-py packages and you will need to
install these, typically using the \code{\link[fafbseg]{simple_python}}
function.

See \code{\link[fafbseg]{read_l2skel}} for additional details.
}
\examples{

\dontrun{
# one time install of necessary python packages
fafbseg::simple_python(pkgs="fafbseg")

dnp42=c("648518346507131167", "648518346485772414")
dnp42.latest=fanc_latestid(dnp42)
dnp42.dps <- fanc_read_l2dp(dnp42.latest)

# plot those
nclear3d()
plot3d(dnp42.dps, lwd=3)
# nb dotprops are always in microns
wire3d(FANC.surf/1e3, col='grey')

nclear3d()
dnp42.skel <- fanc_read_l2skel(dnp42.latest)
plot3d(dnp42.skel, lwd=2)
# nb neuron skeletons are in nm
wire3d(FANC.surf, col='grey')
}
}
