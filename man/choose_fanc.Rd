% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/urls.R
\name{choose_fanc}
\alias{choose_fanc}
\alias{choose_banc}
\alias{with_fanc}
\alias{with_banc}
\title{Choose or (temporarily) use the FANC autosegmentation}
\usage{
choose_fanc(set = TRUE)

choose_banc(set = TRUE)

with_fanc(expr)

with_banc(expr)
}
\arguments{
\item{set}{Whether or not to permanently set the FANC autosegmentation as the
default for \code{\link{fafbseg}} functions.}

\item{expr}{An expression to evaluate while FANC is the default
autosegmentation}
}
\value{
If \code{set=TRUE} a list containing the previous values of the
relevant global options (in the style of \code{\link{options}}. If
\code{set=FALSE} a named list containing the option values.
}
\description{
\code{with_banc} provides a simple way to access the
\href{https://github.com/jasper-tms/the-BANC-fly-connectome/wiki}{BANC}
dataset. Just wrap \code{flywire_.*} or \code{fanc_.*} functions with this
to target them at the BANC.
}
\details{
\code{fancr} inherits a significant amount of infrastructure from
the \code{\link{fafbseg}} package. This has the concept of the
\emph{active} autosegmentation, which in turn defines one or more R options
containing URIs pointing to voxel-wise segmentation, mesh etc data. These
are normally contained within a single neuroglancer URL which points to
multiple data layers. For FANC this is the neuroglancer scene returned by
\code{\link{fanc_scene}}.

note that \code{with_banc(fanc_xyz2id)} is not yet functional as
there is no XYZ location / supervoxel id service yet available as yet.
}
\examples{
\dontrun{
choose_fanc()
options()[grep("^fafbseg.*url", names(options()))]
}
\donttest{
with_fanc(fafbseg::flywire_islatest('648518346498254576'))
}
\dontrun{
with_fanc(fafbseg::flywire_latestid('648518346498254576'))
with_fanc(fafbseg::flywire_latestid('648518346494405175'))
}
\dontrun{
# supervoxel id to root id
with_banc(fafbseg::flywire_rootid('76071705504180616'))
# is this id up to date?
with_banc(fafbseg::flywire_islatest('720575941472355131'))
# find up to date root id
with_banc(fafbseg::flywire_latestid('720575941472355131'))
}

}
