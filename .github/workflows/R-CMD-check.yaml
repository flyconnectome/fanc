# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: macOS-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      CHUNKEDGRAPH_SECRET: ${{ secrets.CHUNKEDGRAPH_SECRET }}
      RETICULATE_MINICONDA_PYTHON_VERSION: 3.8
      RGL_USE_NULL: TRUE
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      _R_CHECK_DONTTEST_EXAMPLES_: FALSE
      _R_CHECK_TESTS_NLINES_: 0
    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@v1
      - name: Install dependencies
        run: |
          install.packages(c("remotes", "rcmdcheck"))
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("covr")
        shell: Rscript {0}

      - name: Fix Conda permissions on macOS
        if: runner.os == 'macOS'
        run: sudo chown -R $UID $CONDA

      - name: Install fafbseg + python
        run: |
          remotes::install_local()
          library(fafbseg)
          simple_python()
          dr_fafbseg()

      - name: writetoken
        run: fafbseg::flywire_set_token(token=Sys.getenv("CHUNKEDGRAPH_SECRET"), domain='wclee.api.zetta.ai')
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: |
          options(crayon.enabled = TRUE)
          rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "error")
        shell: Rscript {0}

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

